//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.9.0.0 (Newtonsoft.Json v9.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


namespace ModifiedGoNoGoTask
{
    #pragma warning disable // Disable all warnings

    /// <summary>
    /// Represents task parameters used in the modified go-nogo task.
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Represents task parameters used in the modified go-nogo task.")]
    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class ModifiedGoNoGoTask
    {
    
        private ExperimentControl _experimentControl = new ExperimentControl();
    
        private ItiDuration _itiDuration = new ItiDuration();
    
        private JoystickParameters _joystickParameters = new JoystickParameters();
    
        private ResponseWindowSettings _responseWindowSettings = new ResponseWindowSettings();
    
        private SolenoidProperties _solenoidProperties = new SolenoidProperties();
    
        private TimeoutProperties _timeoutProperties = new TimeoutProperties();
    
        private ToneProperties _toneProperties = new ToneProperties();
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="experimentControl")]
        public ExperimentControl ExperimentControl
        {
            get
            {
                return _experimentControl;
            }
            set
            {
                _experimentControl = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="itiDuration")]
        public ItiDuration ItiDuration
        {
            get
            {
                return _itiDuration;
            }
            set
            {
                _itiDuration = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="joystickParameters")]
        public JoystickParameters JoystickParameters
        {
            get
            {
                return _joystickParameters;
            }
            set
            {
                _joystickParameters = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="responseWindowSettings")]
        public ResponseWindowSettings ResponseWindowSettings
        {
            get
            {
                return _responseWindowSettings;
            }
            set
            {
                _responseWindowSettings = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="solenoidProperties")]
        public SolenoidProperties SolenoidProperties
        {
            get
            {
                return _solenoidProperties;
            }
            set
            {
                _solenoidProperties = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="timeoutProperties")]
        public TimeoutProperties TimeoutProperties
        {
            get
            {
                return _timeoutProperties;
            }
            set
            {
                _timeoutProperties = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="toneProperties")]
        public ToneProperties ToneProperties
        {
            get
            {
                return _toneProperties;
            }
            set
            {
                _toneProperties = value;
            }
        }
    
        public System.IObservable<ModifiedGoNoGoTask> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new ModifiedGoNoGoTask
                {
                    ExperimentControl = _experimentControl,
                    ItiDuration = _itiDuration,
                    JoystickParameters = _joystickParameters,
                    ResponseWindowSettings = _responseWindowSettings,
                    SolenoidProperties = _solenoidProperties,
                    TimeoutProperties = _timeoutProperties,
                    ToneProperties = _toneProperties
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class ExperimentControl
    {
    
        private string _behaviorCOMPort;
    
        private int _numberOfTrials;
    
        private int _percentageGoTrials;
    
        private bool _responseType;
    
        private string _soundcardCOMPort;
    
        /// <summary>
        /// The name of the serial port used to communicate with the Harp device.
        /// </summary>
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="behaviorCOMPort")]
        [System.ComponentModel.DescriptionAttribute("The name of the serial port used to communicate with the Harp device.")]
        public string BehaviorCOMPort
        {
            get
            {
                return _behaviorCOMPort;
            }
            set
            {
                _behaviorCOMPort = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="numberOfTrials")]
        public int NumberOfTrials
        {
            get
            {
                return _numberOfTrials;
            }
            set
            {
                _numberOfTrials = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="percentageGoTrials")]
        public int PercentageGoTrials
        {
            get
            {
                return _percentageGoTrials;
            }
            set
            {
                _percentageGoTrials = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="responseType")]
        public bool ResponseType
        {
            get
            {
                return _responseType;
            }
            set
            {
                _responseType = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="soundcardCOMPort")]
        public string SoundcardCOMPort
        {
            get
            {
                return _soundcardCOMPort;
            }
            set
            {
                _soundcardCOMPort = value;
            }
        }
    
        public System.IObservable<ExperimentControl> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new ExperimentControl
                {
                    BehaviorCOMPort = _behaviorCOMPort,
                    NumberOfTrials = _numberOfTrials,
                    PercentageGoTrials = _percentageGoTrials,
                    ResponseType = _responseType,
                    SoundcardCOMPort = _soundcardCOMPort
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class ItiDuration
    {
    
        private double _lowerBoundDuration;
    
        private double _upperBoundDuration;
    
        /// <summary>
        /// in seconds (s)
        /// </summary>
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="lowerBoundDuration")]
        [System.ComponentModel.DescriptionAttribute("in seconds (s)")]
        public double LowerBoundDuration
        {
            get
            {
                return _lowerBoundDuration;
            }
            set
            {
                _lowerBoundDuration = value;
            }
        }
    
        /// <summary>
        /// in seconds (s)
        /// </summary>
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="upperBoundDuration")]
        [System.ComponentModel.DescriptionAttribute("in seconds (s)")]
        public double UpperBoundDuration
        {
            get
            {
                return _upperBoundDuration;
            }
            set
            {
                _upperBoundDuration = value;
            }
        }
    
        public System.IObservable<ItiDuration> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new ItiDuration
                {
                    LowerBoundDuration = _lowerBoundDuration,
                    UpperBoundDuration = _upperBoundDuration
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class JoystickParameters
    {
    
        private double _itiLowerThreshold;
    
        private double _itiUpperThreshold;
    
        private double _joystickThreshold;
    
        private double _noGoThreshold;
    
        private double _pullThreshold;
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="itiLowerThreshold")]
        public double ItiLowerThreshold
        {
            get
            {
                return _itiLowerThreshold;
            }
            set
            {
                _itiLowerThreshold = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="itiUpperThreshold")]
        public double ItiUpperThreshold
        {
            get
            {
                return _itiUpperThreshold;
            }
            set
            {
                _itiUpperThreshold = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="joystickThreshold")]
        public double JoystickThreshold
        {
            get
            {
                return _joystickThreshold;
            }
            set
            {
                _joystickThreshold = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="noGoThreshold")]
        public double NoGoThreshold
        {
            get
            {
                return _noGoThreshold;
            }
            set
            {
                _noGoThreshold = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="pullThreshold")]
        public double PullThreshold
        {
            get
            {
                return _pullThreshold;
            }
            set
            {
                _pullThreshold = value;
            }
        }
    
        public System.IObservable<JoystickParameters> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new JoystickParameters
                {
                    ItiLowerThreshold = _itiLowerThreshold,
                    ItiUpperThreshold = _itiUpperThreshold,
                    JoystickThreshold = _joystickThreshold,
                    NoGoThreshold = _noGoThreshold,
                    PullThreshold = _pullThreshold
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class ResponseWindowSettings
    {
    
        private double _goResponseWindow;
    
        private double _noGoResponseWindow;
    
        /// <summary>
        /// in seconds (s)
        /// </summary>
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="goResponseWindow")]
        [System.ComponentModel.DescriptionAttribute("in seconds (s)")]
        public double GoResponseWindow
        {
            get
            {
                return _goResponseWindow;
            }
            set
            {
                _goResponseWindow = value;
            }
        }
    
        /// <summary>
        /// in seconds (s)
        /// </summary>
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="noGoResponseWindow")]
        [System.ComponentModel.DescriptionAttribute("in seconds (s)")]
        public double NoGoResponseWindow
        {
            get
            {
                return _noGoResponseWindow;
            }
            set
            {
                _noGoResponseWindow = value;
            }
        }
    
        public System.IObservable<ResponseWindowSettings> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new ResponseWindowSettings
                {
                    GoResponseWindow = _goResponseWindow,
                    NoGoResponseWindow = _noGoResponseWindow
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class SolenoidProperties
    {
    
        private double _pulsePeriod;
    
        /// <summary>
        /// in milliseconds (ms)
        /// </summary>
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="pulsePeriod")]
        [System.ComponentModel.DescriptionAttribute("in milliseconds (ms)")]
        public double PulsePeriod
        {
            get
            {
                return _pulsePeriod;
            }
            set
            {
                _pulsePeriod = value;
            }
        }
    
        public System.IObservable<SolenoidProperties> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new SolenoidProperties
                {
                    PulsePeriod = _pulsePeriod
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class TimeoutProperties
    {
    
        private double _pullTimeout;
    
        private double _responseTimeout;
    
        /// <summary>
        /// in seconds (s)
        /// </summary>
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="pullTimeout")]
        [System.ComponentModel.DescriptionAttribute("in seconds (s)")]
        public double PullTimeout
        {
            get
            {
                return _pullTimeout;
            }
            set
            {
                _pullTimeout = value;
            }
        }
    
        /// <summary>
        /// in seconds (s)
        /// </summary>
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="responseTimeout")]
        [System.ComponentModel.DescriptionAttribute("in seconds (s)")]
        public double ResponseTimeout
        {
            get
            {
                return _responseTimeout;
            }
            set
            {
                _responseTimeout = value;
            }
        }
    
        public System.IObservable<TimeoutProperties> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new TimeoutProperties
                {
                    PullTimeout = _pullTimeout,
                    ResponseTimeout = _responseTimeout
                }));
        }
    }


    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class ToneProperties
    {
    
        private int _goSound;
    
        private int _missTone;
    
        private int _noGoSound;
    
        private int _rewardTone;
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="goSound")]
        public int GoSound
        {
            get
            {
                return _goSound;
            }
            set
            {
                _goSound = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="missTone")]
        public int MissTone
        {
            get
            {
                return _missTone;
            }
            set
            {
                _missTone = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="noGoSound")]
        public int NoGoSound
        {
            get
            {
                return _noGoSound;
            }
            set
            {
                _noGoSound = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="rewardTone")]
        public int RewardTone
        {
            get
            {
                return _rewardTone;
            }
            set
            {
                _rewardTone = value;
            }
        }
    
        public System.IObservable<ToneProperties> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(
                new ToneProperties
                {
                    GoSound = _goSound,
                    MissTone = _missTone,
                    NoGoSound = _noGoSound,
                    RewardTone = _rewardTone
                }));
        }
    }


    /// <summary>
    /// Serializes a sequence of data model objects into YAML strings.
    /// </summary>
    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Transform)]
    [System.ComponentModel.DescriptionAttribute("Serializes a sequence of data model objects into YAML strings.")]
    public partial class SerializeToYaml
    {
    
        private System.IObservable<string> Process<T>(System.IObservable<T> source)
        {
            return System.Reactive.Linq.Observable.Defer(() =>
            {
                var serializer = new YamlDotNet.Serialization.SerializerBuilder().Build();
                return System.Reactive.Linq.Observable.Select(source, value => serializer.Serialize(value)); 
            });
        }

        public System.IObservable<string> Process(System.IObservable<ModifiedGoNoGoTask> source)
        {
            return Process<ModifiedGoNoGoTask>(source);
        }

        public System.IObservable<string> Process(System.IObservable<ExperimentControl> source)
        {
            return Process<ExperimentControl>(source);
        }

        public System.IObservable<string> Process(System.IObservable<ItiDuration> source)
        {
            return Process<ItiDuration>(source);
        }

        public System.IObservable<string> Process(System.IObservable<JoystickParameters> source)
        {
            return Process<JoystickParameters>(source);
        }

        public System.IObservable<string> Process(System.IObservable<ResponseWindowSettings> source)
        {
            return Process<ResponseWindowSettings>(source);
        }

        public System.IObservable<string> Process(System.IObservable<SolenoidProperties> source)
        {
            return Process<SolenoidProperties>(source);
        }

        public System.IObservable<string> Process(System.IObservable<TimeoutProperties> source)
        {
            return Process<TimeoutProperties>(source);
        }

        public System.IObservable<string> Process(System.IObservable<ToneProperties> source)
        {
            return Process<ToneProperties>(source);
        }
    }


    /// <summary>
    /// Deserializes a sequence of YAML strings into data model objects.
    /// </summary>
    [System.ComponentModel.DefaultPropertyAttribute("Type")]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Transform)]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<ModifiedGoNoGoTask>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<ExperimentControl>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<ItiDuration>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<JoystickParameters>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<ResponseWindowSettings>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<SolenoidProperties>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<TimeoutProperties>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<ToneProperties>))]
    [System.ComponentModel.DescriptionAttribute("Deserializes a sequence of YAML strings into data model objects.")]
    public partial class DeserializeFromYaml : Bonsai.Expressions.SingleArgumentExpressionBuilder
    {
    
        public DeserializeFromYaml()
        {
            Type = new Bonsai.Expressions.TypeMapping<ModifiedGoNoGoTask>();
        }

        public Bonsai.Expressions.TypeMapping Type { get; set; }

        public override System.Linq.Expressions.Expression Build(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments)
        {
            var typeMapping = (Bonsai.Expressions.TypeMapping)Type;
            var returnType = typeMapping.GetType().GetGenericArguments()[0];
            return System.Linq.Expressions.Expression.Call(
                typeof(DeserializeFromYaml),
                "Process",
                new System.Type[] { returnType },
                System.Linq.Enumerable.Single(arguments));
        }

        private static System.IObservable<T> Process<T>(System.IObservable<string> source)
        {
            return System.Reactive.Linq.Observable.Defer(() =>
            {
                var serializer = new YamlDotNet.Serialization.DeserializerBuilder().Build();
                return System.Reactive.Linq.Observable.Select(source, value =>
                {
                    var reader = new System.IO.StringReader(value);
                    var parser = new YamlDotNet.Core.MergingParser(new YamlDotNet.Core.Parser(reader));
                    return serializer.Deserialize<T>(parser);
                });
            });
        }
    }
}